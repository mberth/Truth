
//
// Basic sharing problem
//

A
	C : X

B
	C : Y

A, B
	C : Z
		D
		E
		F
 
 // Navigating downwards in the spine:
 
There are n fragments at a given location. I need to be able to make it so that things 
At every pointer node in the spine, there are a series of fragments that would exist
So I think you need to downscan through the pointer hierarchy, and compute the 
an array of spines for each visited pointer, and then map this spine array into a
fragments array, and store this in the localDictionary property of the Fragment object.

Actually by definition I don't think the fragments can already exist.
Remember that the operations that we're going are not strictly related to the 
edits that occur in the file.

// Document Representation:

a						1
	c, d					2, 9
		e, f				3 • 10, 6 • 13
			g			4 • 7 • 11 • 14
			h			5 • 8 • 12 • 15
	c, d					16, 23
		e, f				17 • 24, 20 • 27
			i			18 • 21 • 25 • 28
			j			19 • 22 • 26 • 29
x, y						30, 31

// Fragmented Representation:

a						1
	c					2
		e				3
			g			4
			h			5
		f				6
			g			7
			h			8
	d					9
		e				10
			g			11
			h			12
		f				13
			g			14
			h			15
	c					16
		e				17
			i			18
			j			19
		f				20
			i			21
			j			22
	d					23
		e				24
			i			25
			j			26
		f				27
			i			28
			j			29
x						30
y						31


// Fragment object structure:
// Each line has it's own Fragment object
// Fragment objects with the same name are 
// stored together in same localDictionary.
